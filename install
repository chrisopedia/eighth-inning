#!/usr/bin/env bash

REPO="eighth-inning"
DIR="/tmp/${REPO}"
GITHUB_USER="chrisopedia"

# Success logging
_success() {
	printf "$(tput setaf 2)✓ Success:$(tput sgr0) %s\n" "$@"
}

# Command/Processing logging
_process() {
	printf "$(tput setaf 6)┃$(tput sgr0)$(tput setaf 7) %s...$(tput sgr0)\n" "$@"
}

# Check for Homebrew; install brew
if ! type -P 'brew' &> /dev/null; then
	ruby -e "$(curl -#fkL https://raw.githubusercontent.com/Homebrew/install/master/install)"

	_process "Running brew doctor"
	brew doctor

	brew install terminal-notifier

	[[ $? ]] && _success "Homebrew installed"
fi

# Download the repository as a tarball
printf "%s┃%s Downloading repository to /tmp directory...%s\n" "$(tput setaf 6)" "$(tput sgr0 ; tput setaf 7)" "$(tput sgr0)"
curl -#fLo /tmp/${REPO}.tar.gz "https://github.com/${GITHUB_USER}/${REPO}/tarball/master"

if [[ ! -d "${DIR}" ]]; then
	mkdir -p "${DIR}"
	
	# Extract to the ${REPO} directory
	printf "%s┃%s Extracting files to %s...%s\n" "$(tput setaf 6)" "$(tput sgr0 ; tput setaf 7)" "${REPO}" "$(tput sgr0)"
	tar -zxf /tmp/${REPO}.tar.gz --strip-components 1 -C "/tmp/${REPO}"
fi

if [[ ! -f /tmp/${REPO}.tar.gz ]]; then
	printf "%s⊘ Error:%s %s. Aborting!\n\n" "$(tput setaf 1)" "$(tput sgr0)" "No tarball in /tmp directory..."
	exit 1
else
	# Remove the tarball
	printf "%s┃%s Removing tarball from /tmp directory...%s\n" "$(tput setaf 6)" "$(tput sgr0 ; tput setaf 7)" "$(tput sgr0)"
	rm -rf /tmp/${REPO}.tar.gz
fi

printf "%s✓ Success:%s %s created, repository downloaded and extracted.\n" "$(tput setaf 2)" "$(tput sgr0)" "${REPO}"
